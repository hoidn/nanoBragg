================================================================================
Detailed nanoBragg Performance Analysis
================================================================================

Outputs will be saved to: reports/benchmarks/20251001-012326

System Information:
CPU cores: 32
Total RAM: 125.7 GB
PyTorch version: 2.7.1+cu126
CUDA available: True
GPU: NVIDIA GeForce RTX 3090

Benchmark Configuration:
Test sizes: [256]
Iterations: 3
Device: cuda
Dtype: float32
Profiling: disabled

C binary: ./golden_suite_generator/nanoBragg

================================================================================
Benchmarking Different Detector Sizes
================================================================================

PERF-PYTORCH-005: Testing simulator cache reuse
Each size will be run twice: cold (first run) and warm (cached)

==================================================
Detector Size: 256x256 (65,536 pixels)
--------------------------------------------------
Running C implementation...
Running PyTorch COLD (first run) on CUDA...
  Setup time (cold): 1.065s
  Simulation time: 0.451s
  Cache hit: False
Running PyTorch WARM (cached) on CUDA...
  Setup time (warm): 0.000s
  Simulation time: 0.006s
  Cache hit: True
  Setup speedup: 558247.1x faster

Results:
  C time: 0.010s (memory: 0.0 MB)
  PyTorch COLD total: 1.517s (memory: 686.5 MB)
  PyTorch WARM total: 0.007s (memory: 0.0 MB)
  Speedup (cold): 0.01x (C faster)
  Speedup (warm): 1.46x (PyTorch faster)
  Correlation (cold): 1.000000
  Correlation (warm): 1.000000

  ✓ Cache effectiveness: 558247.1x faster setup
  ✓ PERF-PYTORCH-005 EXIT CRITERIA MET: Warm setup 0.0ms < 50ms

================================================================================
PERFORMANCE SUMMARY (PERF-PYTORCH-005: Cache Reuse)
================================================================================

Size             Pixels    C (s)    PyTorch    PyTorch      Setup       Corr
                                   COLD (s)   WARM (s)    Speedup     (warm)
----------------------------------------------------------------------------------
256x256          65,536    0.010      1.517      0.007  558247.1x   1.000000

================================================================================
CACHE EFFECTIVENESS (PERF-PYTORCH-005)
================================================================================

Size       Setup COLD (ms) Setup WARM (ms)      Speedup    Exit Crit
----------------------------------------------------------------------
256x256             1064.8             0.0    558247.1x            ✓

PERF-PYTORCH-005 Exit Criteria: Setup time < 50ms for cached runs
  ✓ ALL SIZES MEET EXIT CRITERIA

Detailed results saved to reports/benchmarks/20251001-012326/benchmark_results.json

================================================================================
ANALYSIS
================================================================================

COLD runs (first time, includes compilation):
  ✓ C is on average 151.79x faster than PyTorch

WARM runs (cached simulator):
  ✓ PyTorch is on average 1.46x faster than C

Cache effectiveness: 558247.1x faster setup on average
✓ All correlations > 0.99, indicating excellent numerical agreement


All outputs saved to: reports/benchmarks/20251001-012326
