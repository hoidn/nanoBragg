# SOURCE-WEIGHT-001 Phase G2/G3 Evidence Bundle Commands
# Timestamp: 20251009T214016Z
# Mode: Docs+Parity (Evidence-only per input.md)

## Environment Setup
export KMP_DUPLICATE_LIB_OK=TRUE
export NB_RUN_PARALLEL=1
export NB_C_BIN=./golden_suite_generator/nanoBragg

## C Binary Rebuild
make -C golden_suite_generator
# Result: Binary already up-to-date

## Test Collection
pytest --collect-only -q tests/test_cli_scaling.py::TestSourceWeights tests/test_cli_scaling.py::TestSourceWeightsDivergence
# Result: 8 tests collected

## Pytest Execution  
NB_RUN_PARALLEL=1 KMP_DUPLICATE_LIB_OK=TRUE pytest -v tests/test_cli_scaling.py::TestSourceWeights tests/test_cli_scaling.py::TestSourceWeightsDivergence
# Result: 7 passed, 1 xpassed in 21.20s
# CRITICAL: test_c_divergence_reference XPASS (expected XFAIL)

## TC-D1 PyTorch CLI
python -m nanobrag_torch \
  -sourcefile reports/2025-11-source-weights/phase_a/20251009T071821Z/fixtures/two_sources.txt \
  -lambda 0.9768 \
  -default_F 100 \
  -cell 100 100 100 90 90 90 \
  -distance 100 \
  -detpixels 256 \
  -pixel 0.1 \
  -oversample 1 \
  -phisteps 1 \
  -mosaic_dom 1 \
  -floatfile reports/2025-11-source-weights/phase_g/20251009T214016Z/py_tc_d1.bin
# Result: SUCCESS - py_tc_d1.bin generated, sum=43162, max=76.97

## TC-D3 C CLI
./golden_suite_generator/nanoBragg \
  -sourcefile reports/2025-11-source-weights/phase_a/20251009T071821Z/fixtures/two_sources.txt \
  -lambda 0.9768 \
  -default_F 100 \
  -cell 100 100 100 90 90 90 \
  -distance 100 \
  -detpixels_x 256 \
  -detpixels_y 256 \
  -pixel 0.1 \
  -oversample 1 \
  -phisteps 1 \
  -mosaic_dom 1 \
  -floatfile reports/2025-11-source-weights/phase_g/20251009T214016Z/c_tc_d3.bin
# Result: SEGMENTATION FAULT ❌
# No C output generated

## Python Metrics Computation
python3 << 'PY'
import json, numpy as np
from pathlib import Path
out = Path("reports/2025-11-source-weights/phase_g/20251009T214016Z")
py = np.fromfile(out / "py_tc_d1.bin", dtype=np.float32)
stats = {"sum": float(py.sum()), "mean": float(py.mean()), "max": float(py.max()), "nonzero": int((py != 0).sum())}
(out / "py_metrics.json").write_text(json.dumps(stats, indent=2))
PY

## Correlation Computation
# BLOCKED: Cannot compute - C binary segfaulted, no c_tc_d3.bin available

## Status Summary
- pytest: 7 pass, 1 XPASS (anomaly - expected XFAIL)
- TC-D1: ✅ SUCCESS  
- TC-D3: ❌ SEGFAULT
- Correlation: BLOCKED (no C output)
- Phase G2/G3: INCOMPLETE - Critical blockers prevent evidence bundle completion
