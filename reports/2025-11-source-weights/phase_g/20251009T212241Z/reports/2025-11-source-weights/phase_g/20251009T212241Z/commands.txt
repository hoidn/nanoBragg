# SOURCE-WEIGHT-001 Phase G2/G3 Evidence Bundle
# Date: 2025-10-09 21:22:41 UTC

## Environment
export KMP_DUPLICATE_LIB_OK=TRUE
export NB_RUN_PARALLEL=1

## 1. Pytest Collection
pytest --collect-only -q tests/test_cli_scaling.py::TestSourceWeights tests/test_cli_scaling.py::TestSourceWeightsDivergence

## 2. Pytest Execution
pytest -v tests/test_cli_scaling.py::TestSourceWeights tests/test_cli_scaling.py::TestSourceWeightsDivergence

## 3. TC-D1: PyTorch CLI
python -m nanobrag_torch \
  -cell 100 100 100 90 90 90 \
  -sourcefile reports/2025-11-source-weights/phase_g/20251009T212241Z/fixtures/two_sources.txt \
  -distance 100 \
  -lambda 1.0 \
  -pixel 0.1 \
  -detpixels 256 \
  -oversample 1 \
  -nonoise \
  -nointerpolate \
  -default_F 300 \
  -N 5 \
  -phisteps 1 \
  -mosaic_dom 1 \
  -floatfile reports/2025-11-source-weights/phase_g/20251009T212241Z/py_tc_d1.bin

## 4. TC-D1: PyTorch Metrics
python - <<'PY'
import json, numpy as np
from pathlib import Path
out = Path("reports/2025-11-source-weights/phase_g/20251009T212241Z")
py = np.fromfile(out / "py_tc_d1.bin", dtype=np.float32)
stats = {"sum": float(py.sum()), "mean": float(py.mean()), "max": float(py.max()), "nonzero": int((py != 0).sum())}
(out / "py_metrics.json").write_text(json.dumps(stats, indent=2))
print(json.dumps(stats, indent=2))
PY

## 5. TC-D3: C CLI (Skipped - binary not available)
# export NB_C_BIN=${NB_C_BIN:-./golden_suite_generator/nanoBragg}
# $NB_C_BIN -cell 100 100 100 90 90 90 \
#   -sourcefile reports/2025-11-source-weights/phase_g/20251009T212241Z/fixtures/two_sources.txt \
#   -distance 100 \
#   -lambda 1.0 \
#   -pixel 0.1 \
#   -detpixels 256 \
#   -oversample 1 \
#   -nonoise \
#   -nointerpolate \
#   -default_F 300 \
#   -N 5 \
#   -phisteps 1 \
#   -mosaic_dom 1 \
#   -floatfile reports/2025-11-source-weights/phase_g/20251009T212241Z/c_tc_d3.bin

## Notes
# - C binary not found; C-PARITY-001 divergence cannot be measured in this environment
# - Spec compliance validated via pytest suite (7 passed, 1 xpassed)
# - Fresh fixture created with weights [1.0, 0.2] for two-source testing
