============================= test session starts ==============================
platform linux -- Python 3.10.18, pytest-8.4.2, pluggy-1.6.0 -- /home/ollie/miniconda3/envs/pytorch/bin/python3.10
cachedir: .pytest_cache
rootdir: /home/ollie/Documents/nanoBragg
configfile: pyproject.toml
plugins: typeguard-2.13.3, anyio-4.9.0
collecting ... collected 1 item

tests/test_at_parallel_012.py::TestATParallel012ReferencePatternCorrelation::test_triclinic_P1_correlation auto-selected 2-fold oversampling
FAILED

=================================== FAILURES ===================================
__ TestATParallel012ReferencePatternCorrelation.test_triclinic_P1_correlation __

self = <tests.test_at_parallel_012.TestATParallel012ReferencePatternCorrelation object at 0x7a71604f54b0>

    def test_triclinic_P1_correlation(self):
        """Test triclinic P1 pattern correlation (≥0.9995 correlation, ≤0.5px peaks)."""
        # Load golden data (512x512)
        golden_file = Path(__file__).parent / "golden_data" / "triclinic_P1" / "image.bin"
        golden_image = load_golden_float_image(str(golden_file), (512, 512))
    
        # Setup PyTorch configuration to match canonical command
        # From README: -misset -89.968546 -31.328953 177.753396 -cell 70 80 90 75 85 95
        # -default_F 100 -N 5 -lambda 1.0 -detpixels 512
        crystal_config = CrystalConfig(
            cell_a=70.0, cell_b=80.0, cell_c=90.0,
            cell_alpha=75.0, cell_beta=85.0, cell_gamma=95.0,
            N_cells=(5, 5, 5),
            misset_deg=(-89.968546, -31.328953, 177.753396),
            default_F=100.0
        )
    
        detector_config = DetectorConfig(
            spixels=512,
            fpixels=512,
            pixel_size_mm=0.1,
            distance_mm=100.0,
            detector_convention=DetectorConvention.MOSFLM,  # C code default (no explicit convention flag)
            detector_pivot=DetectorPivot.BEAM
        )
    
        beam_config = BeamConfig(
            wavelength_A=1.0
            # Use default fluence to match C code default
        )
    
        # Run PyTorch simulation
        crystal = Crystal(crystal_config)
        detector = Detector(detector_config)
        simulator = Simulator(crystal, detector, crystal_config, beam_config)
    
        pytorch_image = simulator.run().cpu().numpy()
    
        # Calculate correlation
        corr, _ = pearsonr(golden_image.flatten(), pytorch_image.flatten())
    
        # Find peaks
        golden_peaks = find_peaks(golden_image, n_peaks=50, percentile=99.0)
        pytorch_peaks = find_peaks(pytorch_image, n_peaks=50, percentile=99.0)
    
        # Match peaks
        n_matches, mean_dist = match_peaks_hungarian(golden_peaks, pytorch_peaks, max_distance=0.5)
    
        # Assertions per spec
>       assert corr >= 0.9995, f"Correlation {corr:.4f} < 0.9995 requirement"
E       AssertionError: Correlation 0.9605 < 0.9995 requirement
E       assert 0.9604657535399194 >= 0.9995

tests/test_at_parallel_012.py:223: AssertionError
=========================== short test summary info ============================
FAILED tests/test_at_parallel_012.py::TestATParallel012ReferencePatternCorrelation::test_triclinic_P1_correlation
============================== 1 failed in 4.32s ===============================
