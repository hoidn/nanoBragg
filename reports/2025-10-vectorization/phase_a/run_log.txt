=== Tricubic Interpolation Baseline Benchmark ===
Device: cpu
Dtype: torch.float32
Sizes: [256, 512]
Repeats: 5

Benchmarking size 256x256...
Traceback (most recent call last):
  File "/home/ollie/Documents/tmp/nanoBragg/scripts/benchmarks/tricubic_baseline.py", line 305, in <module>
    main()
    ~~~~^^
  File "/home/ollie/Documents/tmp/nanoBragg/scripts/benchmarks/tricubic_baseline.py", line 250, in main
    result = benchmark_tricubic(size, args.repeats, device, dtype)
  File "/home/ollie/Documents/tmp/nanoBragg/scripts/benchmarks/tricubic_baseline.py", line 126, in benchmark_tricubic
    result_cold = crystal.get_structure_factor(h_mesh, k_mesh, l_mesh)
  File "/home/ollie/Documents/tmp/nanoBragg/src/nanobrag_torch/models/crystal.py", line 216, in get_structure_factor
    return self._tricubic_interpolation(h, k, l)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/home/ollie/Documents/tmp/nanoBragg/src/nanobrag_torch/models/crystal.py", line 361, in _tricubic_interpolation
    h_indices = (h_flr + offsets).to(dtype=self.dtype)
                 ~~~~~~^~~~~~~~~
RuntimeError: The size of tensor a (256) must match the size of tensor b (4) at non-singleton dimension 1
=== Tricubic Interpolation Baseline Benchmark ===
Device: cpu
Dtype: torch.float32
Sizes: [256, 512]
Repeats: 5

Benchmarking size 256x256...
  Scalar calls: 100
  Cold run: 0.140670 s
  Warm runs: 0.140253 ± 0.000163 s
  Time/call: 1402.53 μs
  Throughput: 713.0 calls/sec

Benchmarking size 512x512...
  Scalar calls: 100
  Cold run: 0.143051 s
  Warm runs: 0.138565 ± 0.000638 s
  Time/call: 1385.65 μs
  Throughput: 721.7 calls/sec

Results saved to: reports/2025-10-vectorization/phase_a/tricubic_baseline_results.json
Summary saved to: reports/2025-10-vectorization/phase_a/tricubic_baseline.md

✅ Tricubic baseline benchmark complete!
=== Detector Absorption Baseline Benchmark ===
Device: cpu
Dtype: torch.float32
Sizes: [256, 512]
Thicksteps: [5]
Repeats: 5

Benchmarking size 256x256 with 5 layers...
  Cold run: 1.901759 s
  Warm runs: 0.005199 ± 0.000424 s
  Throughput: 12604721.3 pixels/sec
  Mean intensity: 5.98e-01

Benchmarking size 512x512 with 5 layers...
  Cold run: 0.925664 s
  Warm runs: 0.031537 ± 0.000688 s
  Throughput: 8312173.2 pixels/sec
  Mean intensity: 1.73e-01

Results saved to: reports/2025-10-vectorization/phase_a/absorption_baseline_results.json
Summary saved to: reports/2025-10-vectorization/phase_a/absorption_baseline.md

✅ Detector absorption baseline benchmark complete!
=== Tricubic Interpolation Baseline Benchmark ===
Device: cuda
Dtype: torch.float32
Sizes: [256, 512]
Repeats: 5

Benchmarking size 256x256...
  Scalar calls: 100
  Cold run: 0.558660 s
  Warm runs: 0.554879 ± 0.001995 s
  Time/call: 5548.79 μs
  Throughput: 180.2 calls/sec

Benchmarking size 512x512...
  Scalar calls: 100
  Cold run: 0.551459 s
  Warm runs: 0.552792 ± 0.000441 s
  Time/call: 5527.92 μs
  Throughput: 180.9 calls/sec

Results saved to: reports/2025-10-vectorization/phase_a/tricubic_baseline_results.json
Summary saved to: reports/2025-10-vectorization/phase_a/tricubic_baseline.md

✅ Tricubic baseline benchmark complete!
=== Detector Absorption Baseline Benchmark ===
Device: cuda
Dtype: torch.float32
Sizes: [256, 512]
Thicksteps: [5]
Repeats: 5

Benchmarking size 256x256 with 5 layers...
  Cold run: 0.005815 s
  Warm runs: 0.005787 ± 0.000057 s
  Throughput: 11324656.0 pixels/sec
  Mean intensity: 5.98e-01

Benchmarking size 512x512 with 5 layers...
  Cold run: 0.005953 s
  Warm runs: 0.005851 ± 0.000039 s
  Throughput: 44804998.9 pixels/sec
  Mean intensity: 1.73e-01

Results saved to: reports/2025-10-vectorization/phase_a/absorption_baseline_results.json
Summary saved to: reports/2025-10-vectorization/phase_a/absorption_baseline.md

✅ Detector absorption baseline benchmark complete!
