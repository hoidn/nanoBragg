<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="0" skipped="13" tests="72" time="22.405" timestamp="2025-10-15T01:31:16.217667-07:00" hostname="ollie-System-Product-Name"><testcase classname="tests.test_at_cli_004" name="test_header_precedence_img_then_mask" time="1.761" /><testcase classname="tests.test_at_cli_004" name="test_mask_zeros_are_skipped" time="1.224" /><testcase classname="tests.test_at_cli_004" name="test_mask_beam_center_y_flip" time="1.245" /><testcase classname="tests.test_at_cli_004" name="test_conflicting_detector_size" time="1.185" /><testcase classname="tests.test_at_cli_004" name="test_img_only_no_mask" time="1.264" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_r_factor_calculation" time="0.003" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_distance_update_with_close_distance" time="0.001" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_beam_center_preservation_beam_pivot" time="0.001" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_beam_center_preservation_sample_pivot" time="0.001" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_no_rotations_r_factor_equals_one" time="0.001" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_beam_center_with_various_rotations[DetectorPivot.BEAM]" time="0.004" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_beam_center_with_various_rotations[DetectorPivot.SAMPLE]" time="0.004" /><testcase classname="tests.test_at_geo_003.TestATGEO003RFactorAndBeamCenter" name="test_gradients_flow_through_r_factor" time="0.002" /><testcase classname="tests.test_at_parallel_002.TestATParallel002" name="test_beam_center_scales_with_pixel_size" time="0.002" /><testcase classname="tests.test_at_parallel_002.TestATParallel002" name="test_peak_position_scales_inversely_with_pixel_size" time="0.049" /><testcase classname="tests.test_at_parallel_002.TestATParallel002" name="test_pattern_correlation_across_pixel_sizes" time="0.158" /><testcase classname="tests.test_at_parallel_002.TestATParallel002" name="test_beam_center_parameter_consistency" time="0.003" /><testcase classname="tests.test_at_parallel_012.TestATParallel012ReferencePatternCorrelation" name="test_simple_cubic_correlation" time="0.215" /><testcase classname="tests.test_at_parallel_012.TestATParallel012ReferencePatternCorrelation" name="test_triclinic_P1_correlation" time="0.123" /><testcase classname="tests.test_at_parallel_012.TestATParallel012ReferencePatternCorrelation" name="test_cubic_tilted_detector_correlation" time="0.214" /><testcase classname="tests.test_at_parallel_012.TestATParallel012ReferencePatternCorrelation" name="test_high_resolution_variant" time="3.915" /><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles0-cubic-cell_params0]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles0-triclinic-cell_params1]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles1-cubic-cell_params0]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles1-triclinic-cell_params1]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles2-cubic-cell_params0]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles2-triclinic-cell_params1]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles3-cubic-cell_params0]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles3-triclinic-cell_params1]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles4-cubic-cell_params0]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_explicit_misset_equivalence[misset_angles4-triclinic-cell_params1]" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:194: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_023.TestAT_PARALLEL_023_MissetAnglesEquivalence" name="test_misset_changes_pattern" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_023.py:293: C binary not available</skipped></testcase><testcase classname="tests.test_at_perf_004.TestATPERF004HotPathOptimization" name="test_sincg_throughput" time="0.356" /><testcase classname="tests.test_at_perf_004.TestATPERF004HotPathOptimization" name="test_dot_product_throughput" time="0.037" /><testcase classname="tests.test_at_perf_004.TestATPERF004HotPathOptimization" name="test_profile_hot_paths" time="0.136" /><testcase classname="tests.test_at_perf_004.TestATPERF004HotPathOptimization" name="test_vectorization_efficiency" time="0.020" /><testcase classname="tests.test_at_perf_004.TestATPERF004HotPathOptimization" name="test_critical_operations_performance" time="0.126" /><testcase classname="tests.test_at_sam_002.TestAT_SAM_002_OversampleLastValue" name="test_oversample_omega_last_value_semantics" time="0.008" /><testcase classname="tests.test_at_sam_002.TestAT_SAM_002_OversampleLastValue" name="test_oversample_without_subpixel_flags" time="0.006" /><testcase classname="tests.test_at_sam_002.TestAT_SAM_002_OversampleLastValue" name="test_oversample_flag_precedence" time="0.004" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_square_shape_model" time="0.001" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_round_shape_model" time="0.001" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_gauss_shape_model" time="0.002" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_tophat_shape_model" time="0.000" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_shape_model_comparison" time="0.004" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_fudge_parameter_scaling" time="0.001" /><testcase classname="tests.test_at_str_003.TestAT_STR_003_LatticeShapeModels" name="test_shape_models_at_bragg_peak" time="0.000" /><testcase classname="tests.test_debug_trace.TestDebugTraceFeatures" name="test_printout_flag" time="1.600" /><testcase classname="tests.test_debug_trace.TestDebugTraceFeatures" name="test_printout_pixel_flag" time="1.948" /><testcase classname="tests.test_debug_trace.TestDebugTraceFeatures" name="test_trace_pixel_flag" time="1.825" /><testcase classname="tests.test_debug_trace.TestDebugTraceFeatures" name="test_combined_debug_flags" time="1.400" /><testcase classname="tests.test_debug_trace.TestDebugTraceFeatures" name="test_out_of_bounds_pixel" time="1.434" /><testcase classname="tests.test_oversample_autoselect.TestOversampleAutoSelect" name="test_auto_select_formula" time="0.009" /><testcase classname="tests.test_oversample_autoselect.TestOversampleAutoSelect" name="test_different_crystal_sizes" time="0.037" /><testcase classname="tests.test_oversample_autoselect.TestOversampleAutoSelect" name="test_explicit_oversample_overrides_auto" time="0.026" /><testcase classname="tests.test_oversample_autoselect.TestOversampleAutoSelect" name="test_different_wavelengths" time="0.032" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicGather" name="test_vectorized_matches_scalar" time="0.011" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicGather" name="test_neighborhood_gathering_internals" time="0.005" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicGather" name="test_oob_warning_single_fire" time="0.002" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicGather" name="test_device_neutrality[cpu]" time="0.002" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicGather" name="test_device_neutrality[cuda]" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_tricubic_vectorized.py:316: CUDA not available</skipped></testcase><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polint_matches_scalar_batched" time="0.001" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polint_gradient_flow" time="0.214" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polin2_matches_scalar_batched" time="0.002" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polin2_gradient_flow" time="0.006" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polin3_matches_scalar_batched" time="0.005" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polin3_gradient_flow" time="0.015" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polin3_batch_shape_preserved" time="0.003" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polynomials_support_float64[dtype0]" time="0.001" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polynomials_support_float64[dtype1]" time="0.001" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polynomials_device_neutral[cpu]" time="0.003" /><testcase classname="tests.test_tricubic_vectorized.TestTricubicPoly" name="test_polynomials_device_neutral[cuda]" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_tricubic_vectorized.py:726: CUDA not available</skipped></testcase></testsuite></testsuites>