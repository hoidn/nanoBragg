<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="1" skipped="13" tests="86" time="33.350" timestamp="2025-10-14T17:43:54.776482-07:00" hostname="ollie-System-Product-Name"><testcase classname="tests.test_at_cli_002.TestAT_CLI_002" name="test_minimal_render_with_default_F" time="4.640" /><testcase classname="tests.test_at_cli_002.TestAT_CLI_002" name="test_minimal_render_with_hkl_file" time="4.619" /><testcase classname="tests.test_at_cli_002.TestAT_CLI_002" name="test_data_ordering_fast_major" time="4.606" /><testcase classname="tests.test_at_cli_002.TestAT_CLI_002" name="test_error_without_required_inputs" time="4.040" /><testcase classname="tests.test_at_geo_001" name="test_at_geo_001_mosflm_beam_center_mapping" time="0.003" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_small_mean_exact_poisson" time="0.662" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_medium_mean_rejection_sampling" time="0.067" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_large_mean_gaussian_approximation" time="0.008" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_seed_reproducibility" time="0.001" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_adc_and_clipping" time="0.000" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_all_regimes_in_single_image" time="0.000" /><testcase classname="tests.test_at_noise_001.TestATNoise001" name="test_noise_config_integration" time="0.000" /><testcase classname="tests.test_at_parallel_010.TestATParallel010SolidAngleCorrections" name="test_point_pixel_distance_scaling" time="0.000"><skipped type="pytest.skip" message="AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_010.py:152: AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary</skipped></testcase><testcase classname="tests.test_at_parallel_010.TestATParallel010SolidAngleCorrections" name="test_obliquity_distance_scaling" time="0.000"><skipped type="pytest.skip" message="AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_010.py:228: AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary</skipped></testcase><testcase classname="tests.test_at_parallel_010.TestATParallel010SolidAngleCorrections" name="test_obliquity_with_tilts" time="0.000"><skipped type="pytest.skip" message="AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_010.py:285: AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary</skipped></testcase><testcase classname="tests.test_at_parallel_010.TestATParallel010SolidAngleCorrections" name="test_combined_distance_and_tilt" time="0.000"><skipped type="pytest.skip" message="AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_010.py:340: AT-PARALLEL tests require NB_RUN_PARALLEL=1 and C binary</skipped></testcase><testcase classname="tests.test_at_parallel_021.TestCrystalPhiRotation" name="test_single_step_phi_rotation" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_021.py:114: C binary not available</skipped></testcase><testcase classname="tests.test_at_parallel_021.TestCrystalPhiRotation" name="test_multi_step_phi_rotation" time="0.000"><skipped type="pytest.skip" message="C binary not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_021.py:252: C binary not available</skipped></testcase><testcase classname="tests.test_at_perf_002.TestATPERF002ParallelExecution" name="test_cpu_thread_scaling" time="3.967"><failure message="AssertionError: Thread scaling 0.95x below 1.15x threshold&#10;assert 0.9474682183383158 &gt;= 1.15">self = &lt;tests.test_at_perf_002.TestATPERF002ParallelExecution object at 0x7a87f7256c10&gt;

    def test_cpu_thread_scaling(self):
        """Test CPU thread scaling performance."""
        thread_counts = [1, 2, 4, 8]
        pytorch_times = {}
    
        print("\n" + "="*60)
        print("AT-PERF-002: CPU Thread Scaling")
        print("="*60)
        print("\nPyTorch thread scaling (1024×1024, N=10):")
    
        for threads in thread_counts:
            time_taken = self.run_pytorch_with_threads(threads)
            pytorch_times[threads] = time_taken
            if threads == 1:
                baseline = time_taken
            speedup = baseline / time_taken if threads &gt; 1 else 1.0
            print(f"  {threads} threads: {time_taken:.3f}s (speedup: {speedup:.2f}x)")
    
        # Check speedup from 1 to 4 threads
        speedup_4 = pytorch_times[1] / pytorch_times[4]
        print(f"\nSpeedup from 1 to 4 threads: {speedup_4:.2f}x")
    
        # Spec requires ≥ 2.5x speedup for 4 threads
        # However, for PyTorch with MKL/BLAS, we may see different scaling
        # PyTorch operations are already internally parallelized, so adding more
        # threads has limited benefit. Relax to ≥ 1.15x as a sanity check.
&gt;       assert speedup_4 &gt;= 1.15, \
            f"Thread scaling {speedup_4:.2f}x below 1.15x threshold"
E       AssertionError: Thread scaling 0.95x below 1.15x threshold
E       assert 0.9474682183383158 &gt;= 1.15

tests/test_at_perf_002.py:144: AssertionError</failure></testcase><testcase classname="tests.test_at_perf_002.TestATPERF002ParallelExecution" name="test_pytorch_cpu_vs_c_performance" time="0.772" /><testcase classname="tests.test_at_perf_002.TestATPERF002ParallelExecution" name="test_gpu_acceleration" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_002.py:183: CUDA not available</skipped></testcase><testcase classname="tests.test_at_perf_002.TestATPERF002ParallelExecution" name="test_thread_efficiency" time="2.135" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_roi_bounds_default_to_full_detector" time="0.000" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_roi_bounds_validation" time="0.000" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_roi_limits_rendering_area" time="0.675" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_mask_array_filtering" time="0.005" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_roi_and_mask_combination" time="0.005" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_mask_array_dimension_validation" time="0.000" /><testcase classname="tests.test_at_roi_001.TestAT_ROI_001" name="test_statistics_exclude_masked_pixels" time="0.008" /><testcase classname="tests.test_at_str_001" name="test_at_str_001_nearest_neighbor_lookup" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_cubic_regression" time="0.003" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_triclinic_correctness" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_metric_duality" time="0.002" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_volume_identity" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_resolution_shell_consistency" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_rotation_invariance" time="0.002" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_gradient_flow" time="0.006" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_identity" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_x_rotation" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_y_rotation" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_z_rotation" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_order" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_properties" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_angles_to_rotation_matrix_tensor_types" time="0.000" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_misset_orientation" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_misset_zero_rotation" time="0.002" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_misset_tensor_inputs" time="0.003" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_misset_rotation_order" time="0.001" /><testcase classname="tests.test_crystal_geometry.TestCrystalGeometry" name="test_misset_gradient_flow" time="0.003" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_read_identity_matrix" time="0.002" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_read_cubic_matrix" time="0.001" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_wavelength_scaling" time="0.001" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_triclinic_matrix" time="0.000" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_missing_file" time="0.000" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_invalid_format" time="0.000" /><testcase classname="tests.test_mosflm_matrix.TestMOSFLMMatrixLoading" name="test_comments_and_whitespace" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_dot_product" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_cross_product" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_magnitude" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_unitize" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_rotate_axis" time="0.000" /><testcase classname="tests.test_suite.TestGeometryFunctions" name="test_rotate_umat" time="0.000" /><testcase classname="tests.test_suite.TestCrystalModel" name="test_zero_rotation" time="0.002" /><testcase classname="tests.test_suite.TestCrystalModel" name="test_phi_rotation_90_deg" time="0.002" /><testcase classname="tests.test_suite.TestCrystalModel" name="test_rotation_gradients" time="0.011" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_golden_data_exists" time="0.000" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_simple_cubic_reproduction" time="1.625"><skipped type="pytest.xfail" message="Requires completion of parallel trace debugging initiative - see initiatives/parallel-trace-validation/" /></testcase><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_cubic_tilted_detector_reproduction" time="1.313" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_triclinic_P1_reproduction" time="0.194" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_peak_position_validation" time="0.000" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_sensitivity_to_cell_params" time="0.165" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_performance_simple_cubic" time="0.012" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_performance_triclinic" time="0.392" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_memory_usage_analysis" time="0.213" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_extreme_cell_parameters" time="0.028" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_rotation_compatibility" time="0.151" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_simple_cubic_mosaic_reproduction" time="0.590" /><testcase classname="tests.test_suite.TestTier1TranslationCorrectness" name="test_simulator_phi_rotation" time="0.215" /><testcase classname="tests.test_suite.TestTier2GradientCorrectness" name="test_gradcheck_crystal_params" time="0.055" /><testcase classname="tests.test_suite.TestTier2GradientCorrectness" name="test_gradcheck_detector_params" time="0.005" /><testcase classname="tests.test_suite.TestTier2GradientCorrectness" name="test_gradcheck_phi_rotation" time="0.003"><skipped type="pytest.skip" message="Phi gradient check not yet working: not enough values to unpack (expected 3, got 2)">/home/ollie/Documents/tmp/nanoBragg/tests/test_suite.py:1821: Phi gradient check not yet working: not enough values to unpack (expected 3, got 2)</skipped></testcase><testcase classname="tests.test_suite.TestTier2GradientCorrectness" name="test_gradcheck_mosaic_spread" time="0.003"><skipped type="pytest.skip" message="Mosaic spread gradient check not yet working: not enough values to unpack (expected 3, got 2)">/home/ollie/Documents/tmp/nanoBragg/tests/test_suite.py:1879: Mosaic spread gradient check not yet working: not enough values to unpack (expected 3, got 2)</skipped></testcase><testcase classname="tests.test_suite.TestTier2GradientCorrectness" name="test_gradient_numerical_stability" time="0.003"><skipped type="pytest.skip" message="Gradient stability test not yet working: not enough values to unpack (expected 3, got 2)">/home/ollie/Documents/tmp/nanoBragg/tests/test_suite.py:1954: Gradient stability test not yet working: not enough values to unpack (expected 3, got 2)</skipped></testcase><testcase classname="tests.test_suite.TestTier3ScientificValidation" name="test_bragg_spot_position" time="0.000"><skipped type="pytest.skip" message="Requires implementation of simulation">/home/ollie/Documents/tmp/nanoBragg/tests/test_suite.py:1960: Requires implementation of simulation</skipped></testcase><testcase classname="tests.test_suite.TestTier3ScientificValidation" name="test_polarization_limits" time="0.000"><skipped type="pytest.skip" message="Requires implementation of simulation">/home/ollie/Documents/tmp/nanoBragg/tests/test_suite.py:1966: Requires implementation of simulation</skipped></testcase><testcase classname="tests.test_suite" name="test_import" time="0.000" /></testsuite></testsuites>