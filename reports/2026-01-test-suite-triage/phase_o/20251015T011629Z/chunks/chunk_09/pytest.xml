<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="0" skipped="12" tests="49" time="89.125" timestamp="2025-10-14T18:25:23.829285-07:00" hostname="ollie-System-Product-Name"><testcase classname="" name="tests.test_at_parallel_009" time="0.000"><skipped message="collection skipped">('/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_009.py', 24, 'Skipped: Skipping parallel validation tests. Set NB_RUN_PARALLEL=1 to run.')</skipped></testcase><testcase classname="tests.test_at_cli_007.TestATCLI007NoiseDeterminism" name="test_identical_seed_produces_identical_noise" time="9.229" /><testcase classname="tests.test_at_cli_007.TestATCLI007NoiseDeterminism" name="test_different_seed_produces_different_noise" time="9.223" /><testcase classname="tests.test_at_cli_007.TestATCLI007NoiseDeterminism" name="test_seed_determinism_without_roi" time="9.176" /><testcase classname="tests.test_at_cli_007.TestATCLI007NoiseDeterminism" name="test_negative_seed_accepted" time="9.215" /><testcase classname="tests.test_at_cli_007.TestATCLI007NoiseDeterminism" name="test_overload_count_determinism" time="13.792" /><testcase classname="tests.test_at_cli_008.TestATCLI008DminFiltering" name="test_dmin_filtering_reduces_intensity" time="9.217" /><testcase classname="tests.test_at_cli_008.TestATCLI008DminFiltering" name="test_dmin_very_strict_removes_most_intensity" time="4.881" /><testcase classname="tests.test_at_cli_008.TestATCLI008DminFiltering" name="test_dmin_zero_has_no_effect" time="9.773" /><testcase classname="tests.test_at_io_001.TestAT_IO_001" name="test_smv_header_required_keys" time="0.001" /><testcase classname="tests.test_at_io_001.TestAT_IO_001" name="test_smv_data_ordering" time="0.000" /><testcase classname="tests.test_at_io_001.TestAT_IO_001" name="test_smv_convention_specific_headers" time="0.001" /><testcase classname="tests.test_at_io_001.TestAT_IO_001" name="test_smv_torch_tensor_input" time="0.001" /><testcase classname="tests.test_at_io_001.TestAT_IO_001" name="test_smv_byte_order" time="0.001" /><testcase classname="tests.test_at_parallel_005.TestAT_PARALLEL_005_BeamCenterMapping" name="test_mosflm_xbeam_ybeam_mapping" time="0.000"><skipped type="pytest.skip" message="Parallel validation tests only run with NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_005.py:39: Parallel validation tests only run with NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_005.TestAT_PARALLEL_005_BeamCenterMapping" name="test_xds_orgx_orgy_mapping" time="0.000"><skipped type="pytest.skip" message="Parallel validation tests only run with NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_005.py:64: Parallel validation tests only run with NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_005.TestAT_PARALLEL_005_BeamCenterMapping" name="test_pivot_mode_consistency" time="0.000"><skipped type="pytest.skip" message="Parallel validation tests only run with NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_005.py:90: Parallel validation tests only run with NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_005.TestAT_PARALLEL_005_BeamCenterMapping" name="test_equivalent_configurations_produce_same_pattern" time="0.000"><skipped type="pytest.skip" message="Parallel validation tests only run with NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_005.py:131: Parallel validation tests only run with NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_006.TestATParallel006SingleReflection" name="test_bragg_angle_prediction_single_distance" time="1.900" /><testcase classname="tests.test_at_parallel_006.TestATParallel006SingleReflection" name="test_distance_scaling" time="1.384" /><testcase classname="tests.test_at_parallel_006.TestATParallel006SingleReflection" name="test_combined_wavelength_and_distance" time="0.042" /><testcase classname="tests.test_at_parallel_015.TestATParallel015MixedUnits" name="test_distance_units_consistency" time="1.183" /><testcase classname="tests.test_at_parallel_015.TestATParallel015MixedUnits" name="test_wavelength_units_consistency" time="0.015" /><testcase classname="tests.test_at_parallel_015.TestATParallel015MixedUnits" name="test_angle_units_consistency" time="0.012" /><testcase classname="tests.test_at_parallel_015.TestATParallel015MixedUnits" name="test_mixed_units_comprehensive" time="1.406" /><testcase classname="tests.test_at_parallel_015.TestATParallel015MixedUnits" name="test_detector_rotation_units" time="0.021" /><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_tiny_scale" time="1.265" /><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_large_cell" time="0.297" /><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_long_distance" time="0.008" /><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_extreme_scale_c_comparison" time="0.000"><skipped type="pytest.skip" message="C-PyTorch parallel tests require NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_016.py:223: C-PyTorch parallel tests require NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_combined_extremes" time="0.008" /><testcase classname="tests.test_at_parallel_016.TestATParallel016ExtremeScale" name="test_numerical_stability_metrics" time="0.003" /><testcase classname="tests.test_at_parallel_026.TestAT_PARALLEL_026_TriclinicAbsolutePosition" name="test_triclinic_absolute_peak_position_pytorch_only" time="0.008" /><testcase classname="tests.test_at_parallel_026.TestAT_PARALLEL_026_TriclinicAbsolutePosition" name="test_triclinic_absolute_peak_position_vs_c" time="0.019" /><testcase classname="tests.test_at_parallel_026.TestAT_PARALLEL_026_TriclinicAbsolutePosition" name="test_triclinic_vs_cubic_peak_difference" time="0.016" /><testcase classname="tests.test_at_parallel_027.TestAT_PARALLEL_027" name="test_structure_factor_loading" time="0.001" /><testcase classname="tests.test_at_parallel_027.TestAT_PARALLEL_027" name="test_intensity_ratios" time="1.579" /><testcase classname="tests.test_at_parallel_027.TestAT_PARALLEL_027" name="test_pattern_structure" time="0.006" /><testcase classname="tests.test_at_parallel_027.TestAT_PARALLEL_027" name="test_c_pytorch_equivalence" time="0.000"><skipped type="pytest.skip" message="C-PyTorch parallel tests disabled unless NB_RUN_PARALLEL=1">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_parallel_027.py:156: C-PyTorch parallel tests disabled unless NB_RUN_PARALLEL=1</skipped></testcase><testcase classname="tests.test_at_parallel_027.TestAT_PARALLEL_027" name="test_f_squared_scaling" time="0.001" /><testcase classname="tests.test_at_perf_007.TestATPerf007ComprehensiveBenchmark" name="test_benchmark_suite_execution" time="0.000"><skipped type="pytest.skip" message="Set NB_RUN_BENCHMARKS=1 to run comprehensive benchmarks">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_007.py:376: Set NB_RUN_BENCHMARKS=1 to run comprehensive benchmarks</skipped></testcase><testcase classname="tests.test_at_perf_007.TestATPerf007ComprehensiveBenchmark" name="test_pytorch_performance_basic" time="3.012" /><testcase classname="tests.test_at_perf_007.TestATPerf007ComprehensiveBenchmark" name="test_memory_scaling" time="0.041" /><testcase classname="tests.test_at_perf_007.TestATPerf007ComprehensiveBenchmark" name="test_gpu_performance" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_007.py:465: CUDA not available</skipped></testcase><testcase classname="tests.test_at_perf_007.TestATPerf007ComprehensiveBenchmark" name="test_benchmark_output_format" time="0.000" /><testcase classname="tests.test_at_perf_008.TestATPERF008CUDATensorResidency" name="test_large_tensor_gpu_residency" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_008.py:141: CUDA not available</skipped></testcase><testcase classname="tests.test_at_perf_008.TestATPERF008CUDATensorResidency" name="test_auto_device_selection_uses_cuda" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_008.py:212: CUDA not available</skipped></testcase><testcase classname="tests.test_at_perf_008.TestATPERF008CUDATensorResidency" name="test_skip_when_cuda_unavailable" time="0.005" /><testcase classname="tests.test_at_perf_008.TestATPERF008CUDATensorResidency" name="test_memory_efficient_gpu_usage" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/home/ollie/Documents/tmp/nanoBragg/tests/test_at_perf_008.py:283: CUDA not available</skipped></testcase></testsuite></testsuites>